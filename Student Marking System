<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Student Marks System</title>
  <style>
    
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f4;
  }

  .container {
    display: flex;
    width: 80%;
    background: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    overflow: hidden;
  }

  .left, .right {
    padding: 20px;
  }

  .left {
    flex: 2;
    border-right: 1px solid #ddd;
  }

  .right {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  h1, h3 {
    margin: 0 0 20px;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
  }

  table th, table td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
  }

  table th {
    background-color: #f2f2f2;
  }

  .note {
    font-size: 0.9em;
    color: #666;
  }

  .btn {
    display: inline-block;
    padding: 10px 15px;
    margin: 5px 0;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
  }

  .btn:hover {
    background-color: #0056b3;
  }

  .input-group {
    margin-top: 20px;
    width: 100%;
  }

  .input-group input {
    width: calc(100% - 110px);
    padding: 10px;
    margin-right: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .input-group button {
    width: 100px;
  }

  </style>
</head>
<body>

  <div class="container">
    <!-- Left Side -->
    <div class="left">
      <h1>Student Marks System</h1>
      <p>A simple interactive demo layout to show student marks.</p>

      <table id="studentTable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Marks</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Amit</td>
            <td>85</td>
          </tr>
          <tr>
            <td>Priya</td>
            <td>92</td>
          </tr>
          <tr>
            <td>Rahul</td>
            <td>76</td>
          </tr>
          <tr>
            <td>Sneha</td>
            <td>88</td>
          </tr>
          <tr>
            <td>Karan</td>
            <td>95</td>
          </tr>
        </tbody>
      </table>

      <p class="note">Click controls on the right to interact with the student list (demo layout only).</p>
    </div>

    <!-- Right Side Controls -->
    <div class="right">
      <h3>Controls</h3>
      <button class="btn" id="showHighest">Show Highest</button>
      <button class="btn" id="showAverage">Show Average</button>
      <button class="btn" id="sortByMarks">Sort by Marks</button>
      <button class="btn" id="removeLast">Remove Last</button>
      <button class="btn" id="reset">Reset</button>

      <div class="input-group">
        <input type="text" id="studentName" placeholder="Student name">
        <input type="number" id="studentMarks" placeholder="Marks">
        <button class="btn" id="addStudent">Add Student</button>
      </div>
    </div>
  </div>

  <script>
    const studentTable = document.getElementById('studentTable').getElementsByTagName('tbody')[0];
    const originalData = Array.from(studentTable.rows).map(row => ({
      name: row.cells[0].textContent,
      marks: parseInt(row.cells[1].textContent)
    }));

    // Show Highest
    document.getElementById('showHighest').addEventListener('click', () => {
      let highest = { name: '', marks: -Infinity };
      Array.from(studentTable.rows).forEach(row => {
        const name = row.cells[0].textContent;
        const marks = parseInt(row.cells[1].textContent);
        if (marks > highest.marks) {
          highest = { name, marks };
        }
      });
      alert(`Highest Marks: ${highest.name} with ${highest.marks}`);
    });

    // Show Average
    document.getElementById('showAverage').addEventListener('click', () => {
      const rows = Array.from(studentTable.rows);
      const totalMarks = rows.reduce((sum, row) => sum + parseInt(row.cells[1].textContent), 0);
      const average = totalMarks / rows.length;
      alert(`Average Marks: ${average.toFixed(2)}`);
    });

    // Sort by Marks
    document.getElementById('sortByMarks').addEventListener('click', () => {
      const rows = Array.from(studentTable.rows);
      rows.sort((a, b) => parseInt(b.cells[1].textContent) - parseInt(a.cells[1].textContent));
      rows.forEach(row => studentTable.appendChild(row));
    });

    // Remove Last
    document.getElementById('removeLast').addEventListener('click', () => {
      if (studentTable.rows.length > 0) {
        studentTable.deleteRow(studentTable.rows.length - 1);
      } else {
        alert('No more students to remove.');
      }
    });

    // Reset
    document.getElementById('reset').addEventListener('click', () => {
      studentTable.innerHTML = '';
      originalData.forEach(data => {
        const row = studentTable.insertRow();
        row.insertCell(0).textContent = data.name;
        row.insertCell(1).textContent = data.marks;
      });
    });

    // Add Student
    document.getElementById('addStudent').addEventListener('click', () => {
      const nameInput = document.getElementById('studentName');
      const marksInput = document.getElementById('studentMarks');
      const name = nameInput.value.trim();
      const marks = parseInt(marksInput.value);

      if (name && !isNaN(marks)) {
        const row = studentTable.insertRow();
        row.insertCell(0).textContent = name;
        row.insertCell(1).textContent = marks;
        nameInput.value = '';
        marksInput.value = '';
      } else {
        alert('Please enter valid name and marks.');
      }
    });
  </script>
</body>
</html>
